import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;
public class Solution {

    // Complete the activityNotifications function below.
    static int activityNotifications(int[] expenditure, int d) {
        int start = 0, mid1, mid2, count = 0;
        float median;
        mid2 = d / 2 + 1;

        if (d % 2 == 0)
            mid1 = mid2 - 1;
        else
            mid1 = mid2;
        System.out.println("mid1= " + mid1 + " mid2= " + mid2);
        int[] countArr = new int[201];

        for (int i = 0; i < d; i++) {
            ++countArr[expenditure[i]];
        }

        for (int i = d; i < expenditure.length; i++) {
            median = findMedian(countArr, mid1, mid2);
            System.out.print(" median= " + median);
            if (expenditure[i] >= median * 2)
                count++;
            --countArr[expenditure[start]];
            start++;
            ++countArr[expenditure[i]];
        }

        return count;
    }

    static public float findMedian(int[] arr, int mid1, int mid2) {
        int count = 0, temp1 = 0, temp2 = 0, i = 0;
        while (count < mid1) {
            //            System.out.println("arr[i]= "+ )
            count += arr[i];
            i++;
        }
        //       System.out.print("arr[i]="+arr[i]+ " i= "+i);
        System.out.print(" count= " + count + " i= " + i);
        temp1 = i - 1;
        while (count < mid2) {
            count += arr[i];
            i++;
        }
        temp2 = i - 1;
        //      System.out.println(" i= "+i);
        //   System.out.print("arr[10] = "+ arr[10]);
        return (temp1 + temp2) / (float) 2.0;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] nd = scanner.nextLine().split(" ");

        int n = Integer.parseInt(nd[0]);

        int d = Integer.parseInt(nd[1]);

        int[] expenditure = new int[n];

        String[] expenditureItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int expenditureItem = Integer.parseInt(expenditureItems[i]);
            expenditure[i] = expenditureItem;
        }

        int result = activityNotifications(expenditure, d);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
